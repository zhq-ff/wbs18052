<meta http-equiv="content-type" content="text/html; charset=utf-8" /><style>	canvas {		background: lightgray;		border: 1px solid gray;	}	#score {		color: red;		font-size: 30px;	}</style><canvas id="c" width="400px" height="400px"></canvas><div id="score">0</div><script>	let count = 0;	// 游戏时长10秒	let duration = 10;	// 获取画布	var canvas = document.querySelector("#c");	// 绘制上下文（笔触）	var ctx = canvas.getContext("2d");	const text = "Click me !";		const WIDTH = canvas.width;	const HEIGHT = canvas.height;	const FONT_HEIGHT = 30;	ctx.font = `bold italic ${FONT_HEIGHT}px Times New Roman`;	const TEXT_WIDTH = ctx.measureText(text).width;	// 文字的左下角坐标	let x, y;		let handle = setInterval(() => {		ctx.clearRect(0, 0, WIDTH, HEIGHT);				x = Math.random() * WIDTH;		// 防止x坐标越右边边界		if (x > WIDTH - TEXT_WIDTH)			x = WIDTH - TEXT_WIDTH;		y = Math.random() * HEIGHT;		// 防止y坐标越上边边界		if (y < FONT_HEIGHT)			y = FONT_HEIGHT;		// 以文字的坐下角为基线绘制		ctx.fillText(text, x, y);	}, 1000);	setTimeout(() => {		clearInterval(handle);		// 取消单击事件		c.onclick = null;	}, duration * 1000);	c.onclick = (e) => {		// 单击的坐标		let clickX = e.offsetX;		let clickY = e.offsetY;		// 判断单击位置是否在文字的显示区域内		if (clickX > x && clickX < x + TEXT_WIDTH && clickY < y && clickY > y - FONT_HEIGHT)			count ++;		document.querySelector("#score").textContent = count;			}</script>